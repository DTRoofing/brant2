"""Initial schema from models

Revision ID: d4bf2d2b1a7a
Revises: 
Create Date: 2025-09-18 14:30:00.123456

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd4bf2d2b1a7a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('client_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Float(), nullable=True),
    sa.Column('processing_status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED', name='processingstatus'), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_created_at'), 'documents', ['created_at'], unique=False)
    op.create_index(op.f('ix_documents_processing_status'), 'documents', ['processing_status'], unique=False)
    op.create_index(op.f('ix_documents_project_id'), 'documents', ['project_id'], unique=False)
    op.create_table('measurements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=True),
    sa.Column('area_sf', sa.Float(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('source_coordinates', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('measurement_type', sa.String(length=50), nullable=True),
    sa.Column('extraction_method', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_measurements_document_id'), 'measurements', ['document_id'], unique=False)
    op.create_index(op.f('ix_measurements_measurement_type'), 'measurements', ['measurement_type'], unique=False)
    op.create_table('processing_results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('roof_area_sqft', sa.Float(), nullable=True),
    sa.Column('estimated_cost', sa.Float(), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('materials', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('roof_features', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('labor_estimate', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('project_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('complexity_factors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('processing_time_seconds', sa.Float(), nullable=True),
    sa.Column('stages_completed', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('extraction_method', sa.String(length=50), nullable=True),
    sa.Column('ai_interpretation', sa.Text(), nullable=True),
    sa.Column('recommendations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('warnings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('errors', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id')
    )
    op.create_index(op.f('ix_processing_results_document_id'), 'processing_results', ['document_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_processing_results_document_id'), table_name='processing_results')
    op.drop_table('processing_results')
    op.drop_index(op.f('ix_measurements_measurement_type'), table_name='measurements')
    op.drop_index(op.f('ix_measurements_document_id'), table_name='measurements')
    op.drop_table('measurements')
    op.drop_index(op.f('ix_documents_project_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_processing_status'), table_name='documents')
    op.drop_index(op.f('ix_documents_created_at'), table_name='documents')
    op.drop_table('documents')
    op.drop_table('projects')
    # ### end Alembic commands ###